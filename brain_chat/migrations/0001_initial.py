# Generated by Django 5.2.5 on 2025-10-24 20:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RegistrationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='New Chat', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_quickie', models.BooleanField(default=False, help_text='Quick one-off question')),
                ('is_private', models.BooleanField(default=False, help_text='Private mode - temporary only')),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('user', 'User'), ('assistant', 'Assistant'), ('system', 'System')], max_length=20)),
                ('content', models.TextField()),
                ('llm_provider', models.CharField(blank=True, choices=[('openai', 'OpenAI GPT-4o'), ('gemini', 'Google Gemini'), ('deepseek', 'DeepSeek'), ('claude', 'Anthropic Claude'), ('grok', 'xAI Grok'), ('huggingface', 'Hugging Face'), ('multi', 'Multi-LLM Consensus')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tokens_used', models.IntegerField(default=0)),
                ('response_time_ms', models.IntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='brain_chat.chatsession')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backup_data', models.JSONField()),
                ('backup_timestamp', models.DateTimeField(auto_now_add=True)),
                ('message_count', models.IntegerField(default=0)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='brain_chat.chatsession')),
            ],
            options={
                'ordering': ['-backup_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DiaryNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('mood', models.CharField(blank=True, help_text='Optional mood indicator', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diary_notes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LLMResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('llm_provider', models.CharField(max_length=20)),
                ('response_text', models.TextField()),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('tokens_used', models.IntegerField(default=0)),
                ('response_time_ms', models.IntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='llm_responses', to='brain_chat.chatmessage')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('summary', models.TextField(blank=True, help_text='Detailed project summary')),
                ('selected_llms', models.JSONField(default=list, help_text='List of LLM names: gemini, deepseek, openai, claude, grok, huggingface')),
                ('priority', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=3, help_text='1=Low, 5=Urgent')),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('archived', 'Archived')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ai_summary', models.TextField(blank=True, help_text='Gemini-generated project summary')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-priority', '-updated_at'],
            },
        ),
        migrations.AddField(
            model_name='chatsession',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chat_sessions', to='brain_chat.project'),
        ),
        migrations.CreateModel(
            name='ProjectFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255)),
                ('file_path', models.FileField(upload_to='project_files/%Y/%m/%d/')),
                ('file_type', models.CharField(max_length=50)),
                ('file_size', models.IntegerField()),
                ('original_content', models.TextField(blank=True, help_text='For text files')),
                ('summary', models.TextField(blank=True, help_text='AI-generated summary')),
                ('summarized_by', models.CharField(blank=True, help_text='Which LLM created summary', max_length=50)),
                ('is_summarized', models.BooleanField(default=False)),
                ('content_type', models.CharField(blank=True, help_text='contract, chat_history, technical, business, research, general', max_length=50)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='brain_chat.project')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('totp_secret', models.CharField(blank=True, max_length=32)),
                ('is_2fa_enabled', models.BooleanField(default=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('failed_login_attempts', models.IntegerField(default=0)),
                ('locked_until', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hbb_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
